#include <cilk-lib.cilkh>
#include <stdlib.h>
#include <stdio.h>
#include <assert.h>
#include <string.h>
#include <pthread.h>
#include <unistd.h>


#include <ds_api.cilkh>
    
Cilk_lockvar incr_lock;
int dummy_counter = 0;
int op_count = 0;

cilk void incr(int dummy_wait) {
    int i;
    Cilk_lock(incr_lock); //lock to simulate safe DS op
    for (i=1; i <= DUMMY_WAIT; ++i)
        dummy_counter++;
        op_count++;
    Cilk_unlock(incr_lock);
}

cilk int main(int argc, char *argv[])
{
    int i, dummy_iters, dummy_wait;

    //grab some command line parameter adjustments if available
    if (argc > 1)
        dummy_wait = atoi(argv[1]);
    else
        dummy_wait = DUMMY_WAIT;
    if (argc > 2)
        dummy_iters = atoi(argv[2]);
    else
        dummy_iters = DUMMY_ITERS;

    for (i=0; i < dummy_iters; ++i) {
        spawn incr(dummy_wait);
    }

    sync;

    printf("dummy_counter:%d\nop_count:%d\n", dummy_counter, op_count);

    exit(EXIT_SUCCESS);

    return 0;
}
