#include "order_maintenance.cilk"
#include "util/timer.h"
#define TEST_SIZE 1000 	//Needs to fit with bound (see M)
	//Problems with 9, 10, 11, etc


cilk int main(int argc, char **argv)
{
	int test_size = 10;
	int item_ints[TEST_SIZE];
	int insert_ints[TEST_SIZE];
	itemOM* item_array[TEST_SIZE];
	itemOM* insert_array[TEST_SIZE];
	int int_base = -1;
	int i;
	itemOM* base = create_itemOM(&int_base);
	OM* testOM;
	
	if(argc > 2)
	{
		printf("Incorrect number of arguements\n");
	}
	else if(argc == 2)
	{
		test_size = atoi(argv[1]);
	}
	

	testOM = spawn create_OM(base);
	sync;
	
	//--------Initialize Arrays--------------
	for(i=0;i<TEST_SIZE; ++i)
	{
		item_ints[i] = i;
		insert_ints[i] = i+100;
		item_array[i] = create_itemOM(&item_ints[i]);
		insert_array[i] = create_itemOM(&insert_ints[i]);
	}
	
	//---------Insert "Existing" items-----------
	for(i=0;i<TEST_SIZE;++i)
	{
		spawn individual_insert(testOM, base, item_array[i]);
		sync;
		
	}
	//print_OM(testOM,1);
	
	//----------Insert Multiple Items------------
	startTimer();
	spawn batch_insert(testOM, item_array, insert_array, TEST_SIZE);
	sync;
	stopTimer();
	
	
	
	
	
	
	
	//----------Print----------------	
	
	print_OM(testOM,1);	//0 for list, 1 for tree and list
	
	
	return 0;
}