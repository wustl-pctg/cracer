#include "complex_2_3_tree.cilk"

#define TEST_SIZE 30

cilk int main()
{
	int large_test[TEST_SIZE];
	int test_numbers[TEST_SIZE/2];
    int test_2[10] = {-10, -5, -2, -1};
	struct tree23 *test_tree = create_tree(100);
	struct tree23 *test_tree2 = create_tree(-3);
	int i;
	
	for(i=0; i<TEST_SIZE; ++i)
	{
		large_test[i] = i*10;
	}
	spawn complex_batch_insert(test_tree2, test_2, 4);
	sync;
	
	for(i=0; i<TEST_SIZE/2; ++i)
	{
		test_numbers[i] = i*10;
	}
    
	//115,125,135,153,157,165,175,235};
    
    printf("Start\nsizes: %d\n",sizeof(struct node23));

	spawn complex_batch_insert(test_tree, large_test, TEST_SIZE);
	sync;
	
	print_tree(test_tree->root,0);
	
    //merge_trees(test_tree->root, test_tree2->root);
	spawn complex_batch_remove(test_tree, test_numbers, TEST_SIZE/2);
	/*spawn complex_batch_insert(test_tree,test_numbers,TEST_SIZE/2);
	sync;
	spawn complex_batch_insert(test_tree,test_numbers,TEST_SIZE/2);*/
	sync;
    
	printf("--------------------------------------------------\n");
	print_tree(test_tree->root,0);
	
	delete_tree(test_tree);
    return 0;
}