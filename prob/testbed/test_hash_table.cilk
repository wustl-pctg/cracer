#include "hash_table_ints.cilk"

#define TEST_SIZE 5000

static int count;

int printints(void* input){
    hashTableItem* ptr;
    if (input==NULL) {
        printf("{nil}");
    }
    else {
        ptr=input;
        printf("{");
        do {
            printf("%d ",ptr->key);
            ptr=ptr->next;
            count++;
        }
        while (ptr!=NULL);
        printf("}");
    }
}

cilk int main() {
    hashTable* table1 = hashTable_create(15);
    int i;
    int array[TEST_SIZE];
	
    count=0;
    for (i=0;i<TEST_SIZE;i++){
        array[i] = i;
    }
    for (i=0;i<TEST_SIZE;i++){
        spawn hashTable_insertItem(table1,array[i]);
        sync;
    }
    //spawn hashTable_batchInsert(table1,array,NULL,TEST_SIZE);
   // sync;
    //hashTable_print(table1,printints);
    //printf("\ncount: %d\n",count);
    printf("load: %d\n", table1->load);
	hashTable_delete(table1);
}