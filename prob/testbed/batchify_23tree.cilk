#include "complex_2_3_tree.cilk"

#define TEST_SIZE 30


cilk void parallel_for(int start, int end, struct tree23* tree, int* input, cilk void (*function_ptr)(struct tree23*,int))
{	
	int middle = start+(end-start)/2;
	if(end-start<=5)
		for(start;start<end;++start)
		{
			spawn function_ptr(tree,input[start]);
		}
	else
	{
		spawn parallel_for(start, middle,tree, input,function_ptr);
		spawn parallel_for(middle+1,end, tree, input,function_ptr);
		spawn function_ptr(tree,input[middle]);
	}
}

cilk int main()
{
	//int large_test[TEST_SIZE];
	//int test_numbers[TEST_SIZE/2];
   	// int test_2[10] = {-10, -5, -2, -1};
	struct tree23 *test_tree = create_tree(100);
    int input[TEST_SIZE];
    int i;
    for (i=0;i<TEST_SIZE;i++){
        input[i]=i;
    }
    spawn parallel_for(0,TEST_SIZE,test_tree,input,&insert_item);
    sync;
    
    print_tree(test_tree->root,0);
	delete_tree(test_tree);
	return 0;
}