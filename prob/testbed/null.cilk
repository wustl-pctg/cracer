#include <cilk-lib.cilkh>
#include <stdlib.h>
#include <stdio.h>

#include "util/benchOptions.h"
#include "util/timer.h"
#include "ds/stack.cilk"

Stack *ds;

void batchFunc(void* ds, void* oprec, size_t size, void* result) {
	pushInternal((Stack*)ds, 0);
}

void dsOp(int i, void *ds){
	Cilk_batchify_raw_sequential(&batchFunc,ds,NULL,0,NULL);
}

cilk void runTest(int size)
{
	int i;
	/* for (i = 0; i < size; i++) { */
	/* 	dsOp(_cilk_ws); */
	/* } */
	spawn parfor(0, size-1, 1, &dsOp, ds);
}

cilk int main(int argc, char* argv[]){
	BenchOptions options;

	int testSize;
	getOptions(argc, argv, &options);
	testSize=options.operations;
	ds = create_stack();

	startTimer();
	spawn runTest(testSize);
	sync;
	stopTimer();
	printf("%lf\n",getWallTime());
	return 0;
}
