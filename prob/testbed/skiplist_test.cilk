#include "util/timer.h"
#include "util/benchOptions.h"
#include "util/parfor.cilkh"
#include "ds/skiplist.cilkh"

#define TSIZE 20
#define bInsertSize 5

int g_par_threshold = 1024;
Operation g_add_op = {1, 0};
Operation g_rem_op = {0, 0};

cilk void parfor_skip(const int begin, const int end, Operation op)
{
  int i;

  if (end - begin <= g_par_threshold) {

		for (i = begin; i <= end; ++i) {
		  op.data = i;
//		  insert_seq(_cilk_ws, op);
		  insert_par(_cilk_ws,op);
		}
  } else {
    i = begin+(end-begin)/2;
    spawn parfor_skip(begin, i, op);
    spawn parfor_skip(i + 1, end, op);
  }
}

SkipList* setUp()
{
  SkipList* ds = &list;
  initList();
  return ds;
}

cilk void runMixedTest(SkipList* ds, int size, int add_part)
{

  int add_size = (add_part * size)/100;

  spawn parfor_skip(0, add_size, g_add_op);
  //  spawn parfor_skip(add_size, size, g_rem_op);
  sync;
}

cilk int main(int argc, char* argv[])
{
  SkipList* ds = setUp();
  BenchOptions options;
  int num_ops;

  getOptions(argc, argv, &options);
  num_ops = options.operations;

  startTimer();
  spawn runMixedTest(ds, num_ops, 100);
  sync;
  stopTimer();

  if (options.verbose){
    printf("Batch Add. Size %d. \n", num_ops);
  }

  printf("%lf\n",getWallTime());

  return 0;
}
