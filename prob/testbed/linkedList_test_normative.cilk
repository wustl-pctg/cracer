#include "ds/linkedList.cilkh"

#include <cilk-lib.cilkh>
#include <stdio.h>
#include <stdlib.h>




void printList(LinkedList * list) {
	Node * n;

	n = list->head;
	printf("Head->");
	while (n != NULL){
	printf("%s->", n->name);	
	n = n->next;
	}
	
	printf("Tail\n");
}

cilk void test_one() {
     LinkedList * list1;
     Node * n1, *n2, *n3;
     n1 = malloc(sizeof(Node));
     n2 = malloc(sizeof(Node));
     n3 = malloc(sizeof(Node));
     n1->name  = "n1";
     n2->name = "n2";
     n3->name = "n3";

     list1 =createLinkedList();
     
      printf("%s\n", "starting list 1: should be 1->2->3");

      spawn appendNode(list1, n1);
      sync;

      spawn non_batchInsertSeq(list1, n1, n2);
      sync;

      spawn non_batchInsertSeq(list1, n2, n3);

      printf("%s\n", "List1:");
      printList(list1);

      cleanUp(list1);          
     
}

cilk void test_two() {
     
	LinkedList * list2;
	Node * n1, *n2, *n3, *n4;

	n1 = malloc(sizeof(Node));
	n2 = malloc(sizeof(Node));
        n3 = malloc(sizeof(Node));
        n4 = malloc(sizeof(Node));
        n1->name  = "n1";
        n2->name = "n2";
        n3->name = "n3";
        n4->name = "n4";

        list2 =createLinkedList();


      printf("\n%s\n", "starting list 2: should be 1->3->4->2");

        spawn appendNode(list2, n1);
        sync;

        spawn non_batchInsertSeq(list2, n1, n2);
        sync;

        spawn non_batchInsertSeq(list2, n1, n3);
        sync;

        spawn non_batchInsertSeq(list2, n3, n4);
        sync;

        printf("%s\n", "List2:");
        printList(list2);
	
	cleanUp(list2);
}

cilk void test_three() {
     	LinkedList * list3;
        Node * n1, *n2, *n3, *n4, *n5, *n6;

        n1 = malloc(sizeof(Node));
        n2 = malloc(sizeof(Node));
        n3 = malloc(sizeof(Node));
        n4 = malloc(sizeof(Node));
        n5 = malloc(sizeof(Node));
        n6 = malloc(sizeof(Node));
        n1->name  = "n1";
        n2->name = "n2";
        n3->name = "n3";
        n4->name = "n4";
        n5->name = "n5";
        n6->name = "n6";
        
        list3 =createLinkedList();

        printf("\n%s\n", "starting list 3: should be 1-4-2-5-3-6");

	spawn appendNode(list3, n1);
	sync;

	spawn non_batchInsertSeq(list3, n1, n2);
	sync;

	spawn non_batchInsertSeq(list3, n2, n3);
	sync;

	spawn non_batchInsertSeq(list3, n1, n4);
        sync;

        spawn non_batchInsertSeq(list3, n2, n5);
        sync;

        spawn non_batchInsertSeq(list3, n3, n6);
        sync;

        printf("%s\n", "List3:");
        printList(list3);

        cleanUp(list3);
}


cilk int main(int argc, char **argv)
{
	spawn test_one();
	sync;

	spawn test_two();
	sync;

	spawn test_three();
	sync;

  	return 0;
}
