#ifndef LINKEDLIST_H
#define LINKEDLIST_H

#include <cilk-lib.cilkh>
#include <stdlib.h>
#include <stdio.h>

typedef struct Node_s {

	struct Node_s * prev;
	struct Node_s * next;

	char * name;
} Node;

typedef struct {

	Node * head,* tail;
	int size;
} LinkedList;


typedef struct {

	Node	* x;
	Node 	* y;

} LLInsertRecord;


cilk void batchInsertSeq( LinkedList * list,Node *x, Node *y);
cilk void non_batchInsertSeq( LinkedList * list,Node *x, Node *y);
cilk void non_batchInsertPar(LinkedList * list, LLInsertRecord ** irArray, int size);
cilk void insertPar(void *dataStruct, void *data, size_t size, void *result);
cilk void atomicInsert(LinkedList * list, LLInsertRecord *ir);
cilk int order (LinkedList * list, Node * x, Node * y );

cilk void insertSeq(void *dataStruct, void *data, size_t size, void *result);

LinkedList * createLinkedList();

void cleanUp(LinkedList * ll);

cilk void appendNode(LinkedList * list, Node * newNode);


#endif
