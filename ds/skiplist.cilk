#include <stdlib.h>
#include <stdio.h>

#include "skiplist.cilkh"
struct sl_node
{
  data_t data;
  struct sl_node** forward;
};

struct sl
{
  struct sl_node* head;
  size_t current_level;
  size_t size;
};
//#include "skiplist_batch.cilk"

/* Private methods */
struct sl_node* find(SkipList this, data_t data)
{
  return NULL;
}



/* Public methods */
SkipList sl_create()
{
  return NULL;
}

void sl_destroy(SkipList this)
{

}

// Read-Only
bool sl_search(SkipList this, data_t data)
{
  return false;
}

// Modifiers
void sl_insert_seq(SkipList this, data_t data)
{

}

bool sl_delete_seq(SkipList this, data_t data)
{
  return false;
}

// Parallel Methods
void sl_insert_par(//CilkWorkerState* const ws,
                   SkipList this, data_t data)
{

}

bool sl_delete_par(//CilkWorkerState* const ws,
                   SkipList this, data_t data)
{
  return false;
}

// Auxiliary methods
bool sl_is_empty(SkipList this)
{
  return this->head == NULL;
}

size_t sl_size(SkipList this)
{
  return this->size;
}
