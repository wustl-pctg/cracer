/*
 * =====================================================================================
 *
 *       Filename:  order-maintenance-general.c
 *
 *    Description:  Source file for Bender's OM-Data Structure implemented with a LL top
 *                  and a LL bottom
 *
 *        Version:  1.0
 *        Created:  07/15/2014 11:36:19 AM
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  Alex Jones (aj), atjalex@gmail.com; Shane Deiley, shanedeiley@wustl.edu
 *        Company:  Washington University in St. Louis Summer REU 2014
 *
 * =====================================================================================
 */

#include "order-maintenance-general.cilkh"
/*#include <cilk-lib.cilkh>*/

/// Constants used within this source file
static unsigned long int MAX_NUMBER = ~0;
static int INT_BIT_SIZE = 64;
static double OVERFLOW_CONSTANT = 1.5;

void insertM(OM_Node *x, OM_Node *y){
	InsertRecord *ir = malloc(sizeof(InsertRecord));
	ir->x  = x;
	ir->y  = y;
	
	Cilk_batchify(_cilk_ws, &batchInsertOp ,NULL, ir, sizeof(InsertRecord ), NULL);
}

cilk void batchInsertOp (void *dataStruct, void *data, size_t size, void *result)
{
	int i = 0;
	InsertRecord * irArray = (InsertRecord *)data,* ir;
	/// use a regular for loop to be sequential
	for(; i < size; i++){
		ir = &irArray[i];	
		insert_internal(ir->x, ir->y); 
	}
}

void insert_internal(OM_Node *x, OM_Node *y){

	return;

}
